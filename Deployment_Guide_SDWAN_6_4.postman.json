{
	"info": {
		"_postman_id": "2eebae88-88a6-4668-878f-51dbcd20a4bb",
		"name": "Configuring Secure SD-WAN 6.4",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Common Elements",
			"item": [
				{
					"name": "1 - Create Device Groups",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/group\",\n            \"data\": [\n                {\n                    \"name\": \"Edge\",\n                    \"os_type\": 1\n                },\n                {\n                    \"name\": \"Hubs\",\n                    \"os_type\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "2 - Create System Template",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/devprof/default/device/profile/fortianalyzer\",\n            \"data\": {\n                \"target\": 4,\n                \"target-ip\": \"{{faz_ip}}\",\n                \"target-sn\": [\n                    \"{{faz_sn}}\"\n                ]\n            }\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "3 - Create Certificate Templates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/certificate/template\",\n            \"data\": [\n                {\n                    \"name\": \"Edge\",\n                    \"type\": \"local\",\n                    \"key-type\": \"RSA\",\n                    \"key-size\": \"2048\",\n                    \"digest-type\": \"sha256\"    \n                },\n                {\n                    \"name\": \"Hub\",\n                    \"type\": \"local\",\n                    \"key-type\": \"RSA\",\n                    \"key-size\": \"2048\",\n                    \"digest-type\": \"sha256\"    \n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "4 - Create Normalized Interfaces",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/\",\n            \"data\": [\n                {\n                    \"name\": \"lan\",\n                    \"description\": \"LAN\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"port5\",\n                    \"color\": 2\n                },\n                {\n                    \"name\": \"lo-HC\",\n                    \"description\": \"Health-check Loopback\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"lo-HC\",\n                    \"color\": 2\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "5 - Create Address Objects",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/firewall/address\",\n            \"data\": [\n                {\n                    \"name\": \"CORP_LAN\",\n                    \"subnet\": [\n                        \"10.0.0.0\",\n                        \"255.0.0.0\"\n                    ],\n                    \"type\": 0,\n                    \"associated-interface\": \"any\",\n                    \"color\": 22\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "6 - Create Policy Packages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/pkg/adom/{{adom}}\",\n            \"data\": [\n                {\n                    \"name\": \"Edge\",\n                    \"package settings\": {\n                        \"central-nat\": 0,\n                        \"consolidated-firewall-mode\": 0,\n                        \"fwpolicy-implicit-log\": 0,\n                        \"fwpolicy6-implicit-log\": 0,\n                        \"ngfw-mode\": 0\n                    },\n                    \"scope member\": {\n                        \"name\": \"Edge\"\n                    },\n                    \"type\": \"pkg\"\n                },\n                {\n                    \"name\": \"Hubs\",\n                    \"package settings\": {\n                        \"central-nat\": 0,\n                        \"consolidated-firewall-mode\": 0,\n                        \"fwpolicy-implicit-log\": 0,\n                        \"fwpolicy6-implicit-log\": 0,\n                        \"ngfw-mode\": 0\n                    },\n                    \"scope member\": {\n                        \"name\": \"Hubs\"\n                    },\n                    \"type\": \"pkg\"\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "7 - Create CLI Scripts - Underlay",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*",
									"pm.sendRequest({",
									"    url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
									"    method: 'POST',",
									"    header: \"Content-Type:application/json\",",
									"    body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/sys/status\"}]})",
									"    }",
									"}, function (err, response) {",
									"    var sn = response.json().result[0].data[\"Serial Number\"];",
									"    pm.environment.set(\"sn_fmg\", sn)",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script\",\n            \"data\": [\n                {\n                    \"name\": \"site1-1-interfaces\",\n                    \"type\": \"cli\",\n                    \"target\": \"device_database\",\n                    \"content\": \"\nconfig system interface\n    edit \\\"port1\\\"\n        set vdom \\\"root\\\"\n        set mode dhcp\n        set allowaccess ping\n        set type physical\n    next\n    edit \\\"port4\\\"\n        set vdom \\\"root\\\"\n        set ip 172.16.0.1 255.255.255.248\n        set allowaccess ping\n        set type physical\n    next\n    edit \\\"port5\\\"\n        set vdom \\\"root\\\"\n        set ip 10.0.1.1 255.255.255.0\n        set allowaccess ping\n        set type physical\n    next\n    edit \\\"port10\\\"\n        set vdom \\\"root\\\"\n        set ip 192.168.0.31 255.255.255.0\n        set allowaccess ping https ssh http fgfm\n        set type physical\n    next\nend\nconfig router static\n    edit 5\n        set dst 172.16.0.0 255.255.0.0\n        set gateway 172.16.0.2\n        set device \\\"port4\\\"\n    next\nend\nconfig system global\n    set hostname \\\"site1-1\\\"\nend\n\n\"\n                },\n                {\n                    \"name\": \"site1-2-interfaces\",\n                    \"type\": \"cli\",\n                    \"target\": \"device_database\",\n                    \"content\": \"\nconfig system interface\n    edit \\\"port1\\\"\n        set vdom \\\"root\\\"\n        set mode dhcp\n        set allowaccess ping\n        set type physical\n    next\n    edit \\\"port4\\\"\n        set vdom \\\"root\\\"\n        set ip 172.16.0.9 255.255.255.248\n        set allowaccess ping\n        set type physical\n    next\n    edit \\\"port5\\\"\n        set vdom \\\"root\\\"\n        set ip 10.0.2.1 255.255.255.0\n        set allowaccess ping\n        set type physical\n    next\n    edit \\\"port10\\\"\n        set vdom \\\"root\\\"\n        set ip 192.168.0.32 255.255.255.0\n        set allowaccess ping https ssh http fgfm\n        set type physical\n    next\nend\nconfig router static\n    edit 5\n        set dst 172.16.0.0 255.255.0.0\n        set gateway 172.16.0.10\n        set device \\\"port4\\\"\n    next\nend\nconfig system global\n    set hostname \\\"site1-2\\\"\nend\n\n                    \"\n                },\n                {\n                    \"name\": \"site1-H1-interfaces\",\n                    \"type\": \"cli\",\n                    \"target\": \"device_database\",\n                    \"content\": \"\nconfig system interface\n    edit \\\"port1\\\"\n        set vdom \\\"root\\\"\n        set mode static\n        set ip 100.64.1.1 255.255.255.0\n        set allowaccess ping\n        set type physical\n    next\n    edit \\\"port4\\\"\n        set vdom \\\"root\\\"\n        set ip 172.16.1.5 255.255.255.0\n        set allowaccess ping\n        set type physical\n    next\n    edit \\\"port5\\\"\n        set vdom \\\"root\\\"\n        set ip 10.1.0.1 255.255.255.0\n        set allowaccess ping\n        set type physical\n    next\n    edit \\\"port10\\\"\n        set vdom \\\"root\\\"\n        set ip 192.168.0.41 255.255.255.0\n        set allowaccess ping https ssh http fgfm\n        set type physical\n    next\nend\nconfig router static\n    edit 5\n        set dst 172.16.0.0 255.255.0.0\n        set gateway 172.16.1.6\n        set device \\\"port4\\\"\n    next\nend\nconfig system global\n    set hostname \\\"site1-H1\\\"\nend\n\n                    \"\n                },\n                {\n                    \"name\": \"site1-H2-interfaces\",\n                    \"type\": \"cli\",\n                    \"target\": \"device_database\",\n                    \"content\": \"\nconfig system interface\n    edit \\\"port1\\\"\n        set vdom \\\"root\\\"\n        set mode static\n        set ip 100.64.2.1 255.255.255.0\n        set allowaccess ping\n        set type physical\n    next\n    edit \\\"port4\\\"\n        set vdom \\\"root\\\"\n        set ip 172.16.2.5 255.255.255.0\n        set allowaccess ping\n        set type physical\n    next\n    edit \\\"port5\\\"\n        set vdom \\\"root\\\"\n        set ip 10.2.0.1 255.255.255.0\n        set allowaccess ping\n        set type physical\n    next\n    edit \\\"port10\\\"\n        set vdom \\\"root\\\"\n        set ip 192.168.0.42 255.255.255.0\n        set allowaccess ping https ssh http fgfm\n        set type physical\n    next\nend\nconfig router static\n    edit 5\n        set dst 172.16.0.0 255.255.0.0\n        set gateway 172.16.2.6\n        set device \\\"port4\\\"\n    next\nend\nconfig system global\n    set hostname \\\"site1-H2\\\"\nend\n\n                    \"\n                }\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "8 - Create Meta Fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/_meta_fields/device\",\n            \"data\": [\n                {\n                    \"name\": \"as\",\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"inet-id\",\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"inet-tunnel-net\",\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"mpls-id\",\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"mpls-tunnel-net\",\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"h1-inet-tunnel-ip\",\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"h1-inet-id\",\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"h1-inet-ip\",\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"h1-inet-tunnel-ip\",\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"h1-mpls-id\",\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"h1-mpls-ip\",\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"h1-mpls-tunnel-ip\",\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"h2-inet-id\",\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"h2-inet-ip\",\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"h2-inet-tunnel-ip\",\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"h2-mpls-id\",\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"h2-mpls-ip\",\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"h2-mpls-tunnel-ip\",\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"inet-intf\",\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"mpls-intf\",\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"tunnel-mask\",\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"lan-summary\",\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"lan-net\",\n                    \"importance\": 0,\n                    \"length\": 20,\n                    \"status\": 1\n                }\n            ]\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				},
				{
					"name": "- Breakpoint -",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.setNextRequest(null);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"get\",\n    \"params\": [\n        {\n            \"url\": \"/sys/status\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Basic SD-WAN/ADVPN",
			"item": [
				{
					"name": "Overlay",
					"item": [
						{
							"name": "1 - Add CLI Template - Hub Overlay",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template\",\n            \"data\": [\n                {\n                    \"name\": \"01-Hub-Overlay\",\n                    \"script\": \"\n                    \nconfig vpn ipsec phase1-interface\n  # Local Region (Edges)\n  edit \\\"EDGE_INET\\\"\n    set type dynamic\n    set interface $(inet-intf)\n    set ike-version 2\n    set authmethod signature\n    set peertype any\n    set mode-cfg enable\n    set proposal aes256-sha256\n    set net-device disable\n    set tunnel-search nexthop\n    set add-route disable\n    set auto-discovery-sender enable\n    set network-overlay enable\n    set network-id $(inet-id)\n    set ipv4-start-ip $(inet-tunnel-net: 4,\n                    2)\n    set ipv4-end-ip $(inet-tunnel-net: 4,\n                    253)\n    set ipv4-netmask $tunnel-mask\n    set certificate \\\"Hub\\\"\n  next\n  edit \\\"EDGE_MPLS\\\"\n    set type dynamic\n    set interface $(mpls-intf)\n    set ike-version 2\n    set authmethod signature\n    set peertype any\n    set mode-cfg enable\n    set proposal aes256-sha256\n    set net-device disable\n    set tunnel-search nexthop\n    set add-route disable\n    set auto-discovery-sender enable\n    set network-overlay enable\n    set network-id $(mpls-id)\n    set ipv4-start-ip $(mpls-tunnel-net: 4,\n                    2)\n    set ipv4-end-ip $(mpls-tunnel-net: 4,\n                    253)\n    set ipv4-netmask $tunnel-mask\n    set certificate \\\"Hub\\\"\n  next\nend\nconfig vpn ipsec phase2-interface\n  edit \\\"EDGE_INET\\\"\n    set phase1name \\\"EDGE_INET\\\"\n    set proposal aes256-sha256\n    set keepalive enable\n  next\n  edit \\\"EDGE_MPLS\\\"\n    set phase1name \\\"EDGE_MPLS\\\"\n    set proposal aes256-sha256\n    set keepalive enable\n  next\nend\nconfig system interface\n  edit \\\"EDGE_INET\\\"\n    set vdom \\\"root\\\"\n    set ip $(inet-tunnel-net: 4,\n                    1) 255.255.255.255\n    set allowaccess ping\n    set type tunnel\n    set remote-ip $(inet-tunnel-net: 4,\n                    254) $(tunnel-mask)\n    set interface $(inet-intf)\n  next\n  edit \\\"EDGE_MPLS\\\"\n    set vdom \\\"root\\\"\n    set ip $(mpls-tunnel-net: 4,\n                    1) 255.255.255.255\n    set allowaccess ping\n    set type tunnel\n    set remote-ip $(mpls-tunnel-net: 4,\n                    254) $(tunnel-mask)\n    set interface $(mpls-intf)\n  next\n  edit \\\"lo-HC\\\"\n    set vdom \\\"root\\\"\n    set ip 10.200.99.1 255.255.255.255\n    set allowaccess ping\n    set type loopback\n  next\nend\n\n                    \"\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "2 - Add CLI Template - Edge Overlay",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template\",\n            \"data\": [\n                {\n                    \"name\": \"01-Edge-Overlay\",\n                    \"script\": \"\n                    \nconfig vpn ipsec phase1-interface\n  edit \\\"H1_INET\\\"\n    set interface $(inet-intf)\n    set ike-version 2\n    set authmethod signature\n    set keylife 28800\n    set peertype any\n    set net-device enable\n    set mode-cfg enable\n    set proposal aes256-sha256\n    set add-route disable\n    set idle-timeout enable\n    set auto-discovery-receiver enable\n    set network-overlay enable\n    set network-id $(h1-inet-id)\n    set remote-gw $(h1-inet-ip)\n    set certificate \\\"Edge\\\"\n    set dpd-retrycount 3\n    set dpd-retryinterval 5\n  next\n  edit \\\"H1_MPLS\\\"\n    set interface $(mpls-intf)\n    set ike-version 2\n    set authmethod signature\n    set keylife 28800\n    set peertype any\n    set net-device enable\n    set mode-cfg enable\n    set proposal aes256-sha256\n    set add-route disable\n    set idle-timeout enable\n    set auto-discovery-receiver enable\n    set network-overlay enable\n    set network-id $(h1-mpls-id)\n    set remote-gw $(h1-mpls-ip)\n    set certificate \\\"Edge\\\"\n    set dpd-retrycount 3\n    set dpd-retryinterval 5\n  next\nend\nconfig vpn ipsec phase2-interface\n  edit \\\"H1_INET\\\"\n    set phase1name \\\"H1_INET\\\"\n    set proposal aes256-sha256\n    set keepalive enable\n    set keylifeseconds 3600\n  next\n  edit \\\"H1_MPLS\\\"\n    set phase1name \\\"H1_MPLS\\\"\n    set proposal aes256-sha256\n    set keepalive enable\n    set keylifeseconds 3600\n  next\nend\nconfig system interface\n  edit \\\"H1_INET\\\"\n    set vdom \\\"root\\\"\n    set allowaccess ping\n    set type tunnel\n    set interface $(inet-intf)\n  next\n  edit \\\"H1_MPLS\\\"\n    set vdom \\\"root\\\"\n    set allowaccess ping\n    set type tunnel\n    set interface $(mpls-intf)\n  next\nend\n\n                    \"\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "3 - Set CLI Template Groups",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template-group\",\n            \"data\": [\n                {\n                    \"name\": \"Hub-Template\",\n                    \"member\": [\n                        \"01-Hub-Overlay\"\n                    ]\n                },\n                {\n                    \"name\": \"Edge-Template\",\n                    \"member\": [\n                        \"01-Edge-Overlay\"\n                    ]\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Routing",
					"item": [
						{
							"name": "1 - Add CLI Template - Hub Routing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template\",\n            \"data\": [\n                {\n                    \"name\": \"02-Hub-Routing\",\n                    \"script\": \"\n                    \nconfig router bgp\n  set as $(as)\n  set router-id $(lan-net:4,1)\n  set keepalive-timer 5\n  set holdtime-timer 15\n  set ibgp-multipath enable\n  set ebgp-multipath enable\n  set additional-path enable\n  # additional-path-select = max. number of overlays * max. number of hubs\n  set additional-path-select 2\n  config neighbor-group\n    edit \\\"EDGE\\\"\n      set soft-reconfiguration enable\n      set advertisement-interval 1\n      set link-down-failover enable\n      set next-hop-self enable\n      set remote-as $(as)\n      set additional-path send\n      # adv-additional-path = max. number of overlays * max. number of hubs\n      set adv-additional-path 2\n      set route-reflector-client enable\n    next\n  end\n  config neighbor-range\n    edit 1\n      set prefix 10.200.0.0/14\n      set neighbor-group \\\"EDGE\\\"\n    next\n  end\n  config network\n    edit 1\n      set prefix $(lan-net)\n    next\n  end\nend\n\nconfig router policy\n  edit 1\n    set input-device \\\"EDGE_INET\\\"\n    set output-device \\\"EDGE_INET\\\"\n    set dst 10.0.0.0/8\n  next\n  edit 2\n    set input-device \\\"EDGE_MPLS\\\"\n    set output-device \\\"EDGE_MPLS\\\"\n    set dst 10.0.0.0/8\n  next\nend\n\nconfig router static\n  edit 101\n    set dst 10.0.0.0/8\n    set blackhole enable\n    set comment \\\"Avoid potential leak of corporate traffic to underlay\\\"\n  next\n  edit 102\n    set dst 10.200.0.0/14\n    set blackhole enable\n    set comment \\\"Avoid potential recursive resolution of corporate BGP routes via underlay\\\"\n  next\nend\n\n                    \"\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "2 - Add CLI Template - Edge Routing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template\",\n            \"data\": [\n                {\n                    \"name\": \"02-Edge-Routing\",\n                    \"script\": \"\n                    \nconfig router static\n  edit 101\n    set dst $(lan-summary)\n    set blackhole enable\n    set comment \\\"Avoid potential leak of corporate traffic to underlay\\\"\n  next\n  edit 102\n    set dst 10.200.0.0/14\n    set device \\\"H1_INET\\\"\n    set comment \\\"Cross-overlay BGP NH reachability\\\"\n  next\n  edit 103\n    set dst 10.200.0.0/14\n    set device \\\"H1_MPLS\\\"\n    set comment \\\"Cross-overlay BGP NH reachability\\\"\n  next\nend\n\nconfig router bgp\n  set as $(as)\n  set router-id $(lan-net:4,1)\n  set keepalive-timer 5\n  set holdtime-timer 15\n  set ibgp-multipath enable\n  set additional-path enable\n  # additional-path-select = max. number of overlays * max. number of hubs\n  set additional-path-select 2\n  config neighbor\n    edit $(h1-inet-tunnel-ip)\n      set soft-reconfiguration enable\n      set advertisement-interval 1\n      set link-down-failover enable\n      set interface \\\"H1_INET\\\"\n      set connect-timer 1\n      set remote-as $(as)\n      set additional-path receive\n    next\n    edit $(h1-mpls-tunnel-ip)\n      set soft-reconfiguration enable\n      set advertisement-interval 1\n      set link-down-failover enable\n      set interface \\\"H1_MPLS\\\"\n      set connect-timer 1\n      set remote-as $(as)\n      set additional-path receive\n    next\n  end\n  config network\n    edit 1\n      set prefix $(lan-net)\n    next\n  end\nend\n\n                    \"\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "3 - Add to CLI Template Group - Hub",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template-group/Hub-Template/member\",\n            \"data\": [\n                \"02-Hub-Routing\"\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "4 - Add to CLI Template Group - Edge",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template-group/Edge-Template/member\",\n            \"data\": [\n                \"02-Edge-Routing\"\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "SD-WAN",
					"item": [
						{
							"name": "1 - Create Normalized Interfaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/\",\n            \"data\": [\n                {\n                    \"name\": \"EDGE_INET\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"EDGE_INET\",\n                    \"color\": 2\n                },\n                {\n                    \"name\": \"EDGE_MPLS\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"EDGE_MPLS\",\n                    \"color\": 2\n                },\n                {\n                    \"name\": \"H1_INET\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"H1_INET\",\n                    \"color\": 2\n                },\n                {\n                    \"name\": \"H1_MPLS\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"H1_MPLS\",\n                    \"color\": 2\n                },\n                {\n                    \"name\": \"UL_INET\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"{{inet-intf}}\",\n                    \"color\": 2\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "2 - Create SD-WAN Interface Members",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/virtual-wan-link/members\",\n            \"data\": [\n                {\n                    \"name\": \"EDGE_INET\",\n                    \"interface\": \"EDGE_INET\",\n                    \"cost\": 0,\n                    \"weight\": 1,\n                    \"priority\": 10,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"EDGE_MPLS\",\n                    \"interface\": \"EDGE_MPLS\",\n                    \"cost\": 0,\n                    \"weight\": 1,\n                    \"priority\": 10,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"H1_INET\",\n                    \"interface\": \"H1_INET\",\n                    \"cost\": 0,\n                    \"weight\": 1,\n                    \"priority\": 10,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"H1_MPLS\",\n                    \"interface\": \"H1_MPLS\",\n                    \"cost\": 0,\n                    \"weight\": 1,\n                    \"priority\": 10,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"UL_INET\",\n                    \"interface\": \"UL_INET\",\n                    \"cost\": 0,\n                    \"weight\": 1,\n                    \"priority\": 0,\n                    \"status\": 1\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "3 - Create Health Check Servers",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/virtual-wan-link/server\",\n            \"data\": [\n                {\n                    \"name\": \"HUB\",\n                    \"description\": null,\n                    \"server\": [\n                        \"10.200.99.1\"\n                    ],\n                    \"dynamic_mapping\": null\n                },\n                {\n                    \"name\": \"Internet\",\n                    \"description\": null,\n                    \"server\": [\n                        \"www.fortinet.com\"\n                    ],\n                    \"dynamic_mapping\": null\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "4 - Create SDWAN Template - Hub",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/wanprof/adom/{{adom}}/\",\n            \"data\": {\n            \t\"name\": \"Hub-Template\",\n            \t\"type\": \"wanprof\"\n            \t\n            }\n        }\n            \n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "5 - Populate SDWAN Template - Hub",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"replace\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/wanprof/Hub-Template/system/sdwan\",\n            \"data\": {\n                \"status\": 1,\n                \"load-balance-mode\": 1,\n                \"fail-detect\": \"disable\",\n                \"zone\": [\n                    {\n                        \"name\": \"virtual-wan-link\"\n                    },\n                    {\n                        \"name\": \"underlay\"\n                    },\n                    {\n                        \"name\": \"overlay\"\n                    }\n                ],\n                \"members\": [\n                    {\n                        \"_dynamic-member\": \"UL_INET\",\n                        \"zone\": \"underlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"EDGE_INET\",\n                        \"zone\": \"overlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"EDGE_MPLS\",\n                        \"zone\": \"overlay\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "6 - Create SDWAN Template - Edge",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/wanprof/adom/{{adom}}/\",\n            \"data\": {\n            \t\"name\": \"Edge-Template\",\n            \t\"type\": \"wanprof\"\n            \t\n            }\n        }\n            \n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "7 - Populate SDWAN Template - Edge",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"replace\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/wanprof/Edge-Template/system/sdwan\",\n            \"data\": {\n                \"status\": 1,\n                \"load-balance-mode\": 1,\n                \"fail-detect\": \"disable\",\n                \"zone\": [\n                    {\n                        \"name\": \"virtual-wan-link\"\n                    },\n                    {\n                        \"name\": \"underlay\"\n                    },\n                    {\n                        \"name\": \"overlay\"\n                    }\n                ],\n                \"members\": [\n                    {\n                        \"_dynamic-member\": \"UL_INET\",\n                        \"zone\": \"underlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"H1_INET\",\n                        \"zone\": \"overlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"H1_MPLS\",\n                        \"zone\": \"overlay\"\n                    }\n                ],\n                \"health-check\": [\n                    {\n                        \"name\": \"HUB\",\n                        \"_dynamic-server\": [\n                            \"HUB\"\n                        ],\n                        \"protocol\": 1,\n                        \"members\": [\n                            2,\n                            3\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 1,\n                        \"update-static-route\": 1,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 100,\n                                \"link-cost-factor\": 1\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"Internet\",\n                        \"_dynamic-server\": [\n                            \"Internet\"\n                        ],\n                        \"protocol\": 1,\n                        \"members\": [\n                            1,\n                            3\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 1,\n                        \"update-static-route\": 1,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 250,\n                                \"link-cost-factor\": 1\n                            }\n                        ]\n                    }\n                ],\n                \"service\": [\n                    {\n                        \"id\": 1,\n                        \"name\": \"Corporate\",\n                        \"src\": \"CORP_LAN\",\n                        \"dst\": \"CORP_LAN\",\n                        \"dst-negate\": 0,\n                        \"protocol\": 0,\n                        \"role\": 3,\n                        \"mode\": 4,\n                        \"sla\": [\n                            {\n                                \"health-check\": \"HUB\",\n                                \"id\": 1\n                            }\n                        ],\n                        \"priority-members\": [\n                            \"2\",\n                            \"3\"\n                        ],\n                        \"route-tag\": 0,\n                        \"gateway\": 0,\n                        \"groups\": [],\n                        \"addr-mode\": 7,\n                        \"default\": 0,\n                        \"hold-down-time\": 20,\n                        \"input-device\": [],\n                        \"internet-service\": 0,\n                        \"link-cost-threshold\": 10,\n                        \"sla-compare-method\": 0,\n                        \"src-negate\": 0,\n                        \"standalone-action\": 0,\n                        \"status\": 1\n                    },\n                    {\n                        \"id\": 2,\n                        \"name\": \"Internet\",\n                        \"src\": [],\n                        \"dst\": \"all\",\n                        \"dst-negate\": 0,\n                        \"protocol\": 0,\n                        \"role\": 3,\n                        \"mode\": 4,\n                        \"sla\": [\n                            {\n                                \"health-check\": \"Internet\",\n                                \"id\": 1\n                            }\n                        ],\n                        \"priority-members\": [\n                            \"1\",\n                            \"3\"\n                        ],\n                        \"route-tag\": 0,\n                        \"gateway\": 0,\n                        \"groups\": [],\n                        \"addr-mode\": 7,\n                        \"default\": 0,\n                        \"hold-down-time\": 0,\n                        \"input-device\": [],\n                        \"link-cost-threshold\": 10,\n                        \"sla-compare-method\": 0,\n                        \"src-negate\": 0,\n                        \"standalone-action\": 0,\n                        \"status\": 1\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "8 - Add CLI Template - Defaults",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template\",\n            \"data\": [\n                {\n                    \"name\": \"03-Default\",\n                    \"script\": \"\n\nconfig router static\n  edit 100\n    set sdwan enable\n  next\nend\n\n                    \"\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "9 - Add to CLI Template Group - Hub",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template-group/Hub-Template/member\",\n            \"data\": [\n                \"03-Default\"\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "10 - Add to CLI Template Group - Edge",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template-group/Edge-Template/member\",\n            \"data\": [\n                \"03-Default\"\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "11 - Add Firewall Rules - Hubs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/pkg/Hubs/firewall/policy/\",\n            \"data\": [\n                {\n                    \"name\": \"Corporate\",\n                    \"policyid\": 1,\n                    \"srcintf\": [\n                        \"lan\",\n                        \"overlay\"\n                    ],\n                    \"dstintf\": [\n                        \"lan\",\n                        \"overlay\"\n                    ],\n                    \"srcaddr\": \"CORP_LAN\",\n                    \"dstaddr\": \"CORP_LAN\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"anti-replay\": 0,\n                    \"tcp-session-without-syn\": 0,\n                    \"profile-protocol-options\": [],\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2\n                },\n                {\n                    \"name\": \"Health-Check\",\n                    \"policyid\": 2,\n                    \"srcintf\": [\n                        \"overlay\"\n                    ],\n                    \"dstintf\": \"lo-HC\",\n                    \"srcaddr\": \"all\",\n                    \"dstaddr\": \"all\",\n                    \"service\": \"PING\",\n                    \"action\": 1,\n                    \"profile-protocol-options\": [],\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 3\n                },\n                {\n                    \"name\": \"Internet (DIA)\",\n                    \"policyid\": 3,\n                    \"srcintf\": \"lan\",\n                    \"dstintf\": \"underlay\",\n                    \"srcaddr\": \"all\",\n                    \"dstaddr\": \"all\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"nat\": 1,\n                    \"utm-status\": 1,\n                    \"application-list\": [\n                        \"default\"\n                    ],\n                    \"ssl-ssh-profile\": [\n                        \"deep-inspection\"\n                    ],\n                    \"profile-protocol-options\": [],\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2\n                },\n                {\n                    \"name\": \"Internet (RIA)\",\n                    \"policyid\": 3,\n                    \"srcintf\": \"overlay\",\n                    \"dstintf\": \"underlay\",\n                    \"srcaddr\": \"all\",\n                    \"dstaddr\": \"all\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"nat\": 1,\n                    \"utm-status\": 1,\n                    \"application-list\": [\n                        \"default\"\n                    ],\n                    \"ssl-ssh-profile\": [\n                        \"deep-inspection\"\n                    ],\n                    \"profile-protocol-options\": [],\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "12 - Add Firewall Rules - Edge",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/pkg/Edge/firewall/policy/\",\n            \"data\": [\n                {\n                    \"name\": \"Corporate\",\n                    \"policyid\": 1,\n                    \"srcintf\": [\n                        \"lan\",\n                        \"overlay\"\n                    ],\n                    \"dstintf\": [\n                        \"lan\",\n                        \"overlay\"\n                    ],\n                    \"srcaddr\": \"CORP_LAN\",\n                    \"dstaddr\": \"CORP_LAN\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"profile-protocol-options\": [],\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2\n                },\n                {\n                    \"name\": \"Internet (DIA)\",\n                    \"policyid\": 2,\n                    \"srcintf\": \"lan\",\n                    \"dstintf\": \"underlay\",\n                    \"srcaddr\": \"all\",\n                    \"dstaddr\": \"all\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"nat\": 1,\n                    \"utm-status\": 1,\n                    \"application-list\": [\n                        \"default\"\n                    ],\n                    \"ssl-ssh-profile\": [\n                        \"deep-inspection\"\n                    ],\n                    \"profile-protocol-options\": [],\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2\n                },\n                {\n                    \"name\": \"Internet (RIA)\",\n                    \"policyid\": 3,\n                    \"srcintf\": \"lan\",\n                    \"dstintf\": \"overlay\",\n                    \"srcaddr\": \"all\",\n                    \"dstaddr\": \"all\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"nat\": 0,\n                    \"utm-status\": 1,\n                    \"application-list\": [\n                        \"default\"\n                    ],\n                    \"profile-protocol-options\": [],\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Deploy",
					"item": [
						{
							"name": "1 - Add Model Devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"function waitOnTask(retries) {",
											"    if (!retries) {",
											"        pm.test(\"Task completed\", function() {",
											"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
											"        });",
											"        postman.setNextRequest(null);",
											"    }",
											"    else {",
											"        pm.sendRequest({",
											"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
											"            method: 'POST',",
											"            header: \"Content-Type:application/json\",",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
											"            }",
											"        }, function(err, response) {",
											"            var jsonData = response.json();",
											"            if (jsonData.result[0].data.percent == 100) {",
											"                // Task completed",
											"                if (jsonData.result[0].data.num_err) {",
											"                    postman.setNextRequest(null);",
											"                }",
											"                pm.test(\"Task completed\", function() {",
											"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
											"                });",
											"            }",
											"            else {",
											"                console.log(\"Task is still not complete\");",
											"                setTimeout(function() {",
											"                    waitOnTask(--retries);",
											"                }, 10000);",
											"            }",
											"        }); ",
											"    }",
											"}",
											"",
											"var jsonData = pm.response.json();",
											"var taskid = jsonData.result[0].data.taskid;",
											"",
											"waitOnTask(10);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"session\": \"{{session}}\",\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvm/cmd/add/dev-list\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"flags\": [\n                    \"create_task\",\n                    \"nonblocking\"\n                ],\n                \"add-dev-list\": [\n                    {\n                        \"name\": \"site1-H1\",\n                        \"device action\": \"add_model\",\n                        \"os_ver\": 6,\n                        \"version\": 600,\n                        \"os_type\": 0,\n                        \"mr\": 4,\n                        \"platform_str\": \"FortiGate-VM64-KVM\",\n                        \"mgmt_mode\": 3,\n                        \"flags\": 67371040,\n                        \"prefer_img_ver\": \"6.4.6-b1879\",\n                        \"psk\": \"secret-1-H1\",\n                        \"faz.perm\": 15,\n                        \"faz.quota\": 0,\n                        \"latitude\": \"48.858673\",\n                        \"longitude\": \"2.351281\",\n                        \"meta fields\": {\n                            \"as\": \"{{as}}\",\n                            \"inet-id\": \"{{h1-inet-id}}\",\n                            \"inet-intf\": \"{{inet-intf}}\",\n                            \"inet-tunnel-net\": \"{{h1-inet-tunnel-net}}\",\n                            \"mpls-id\": \"{{h1-mpls-id}}\",\n                            \"mpls-intf\": \"{{mpls-intf}}\",\n                            \"mpls-tunnel-net\": \"{{h1-mpls-tunnel-net}}\",\n                            \"tunnel-mask\": \"{{tunnel-mask}}\",\n                            \"lan-summary\": \"{{lan-summary}}\",\n                            \"lan-net\": \"{{h1-lan-net}}\",\n                            \"Address\": \"Paris, France\"\n                        }\n                    },\n                    {\n                        \"name\": \"site1-1\",\n                        \"device action\": \"add_model\",\n                        \"os_ver\": 6,\n                        \"version\": 600,\n                        \"os_type\": 0,\n                        \"mr\": 4,\n                        \"platform_str\": \"FortiGate-VM64-KVM\",\n                        \"mgmt_mode\": 3,\n                        \"flags\": 67371040,\n                        \"prefer_img_ver\": \"6.4.6-b1879\",\n                        \"psk\": \"secret-1-1\",\n                        \"faz.perm\": 15,\n                        \"faz.quota\": 0,\n                        \"latitude\": \"43.6164\",\n                        \"longitude\": \"7.0552\",\n                        \"meta fields\": {\n                            \"as\": \"{{as}}\",\n                            \"inet-intf\": \"{{inet-intf}}\",\n                            \"mpls-intf\": \"{{mpls-intf}}\",\n                            \"h1-inet-id\": \"{{h1-inet-id}}\",\n                            \"h1-inet-ip\": \"{{h1-inet-ip}}\",\n                            \"h1-inet-tunnel-ip\": \"{{h1-inet-tunnel-ip}}\",\n                            \"h1-mpls-id\": \"{{h1-mpls-id}}\",\n                            \"h1-mpls-ip\": \"{{h1-mpls-ip}}\",\n                            \"h1-mpls-tunnel-ip\": \"{{h1-mpls-tunnel-ip}}\",\n                            \"lan-summary\": \"{{lan-summary}}\",\n                            \"lan-net\": \"{{site11-lan-net}}\",\n                            \"Address\": \"Sophia Antipolis, France\"\n                        }\n                    },\n                    {\n                        \"name\": \"site1-2\",\n                        \"device action\": \"add_model\",\n                        \"os_ver\": 6,\n                        \"version\": 600,\n                        \"os_type\": 0,\n                        \"mr\": 4,\n                        \"platform_str\": \"FortiGate-VM64-KVM\",\n                        \"mgmt_mode\": 3,\n                        \"flags\": 67371040,\n                        \"prefer_img_ver\": \"6.4.6-b1879\",\n                        \"psk\": \"secret-1-2\",\n                        \"faz.perm\": 15,\n                        \"faz.quota\": 0,\n                        \"latitude\": \"44.4949\",\n                        \"longitude\": \"11.3426\",\n                        \"meta fields\": {\n                            \"as\": \"{{as}}\",\n                            \"inet-intf\": \"{{inet-intf}}\",\n                            \"mpls-intf\": \"{{mpls-intf}}\",\n                            \"h1-inet-id\": \"{{h1-inet-id}}\",\n                            \"h1-inet-ip\": \"{{h1-inet-ip}}\",\n                            \"h1-inet-tunnel-ip\": \"{{h1-inet-tunnel-ip}}\",\n                            \"h1-mpls-id\": \"{{h1-mpls-id}}\",\n                            \"h1-mpls-ip\": \"{{h1-mpls-ip}}\",\n                            \"h1-mpls-tunnel-ip\": \"{{h1-mpls-tunnel-ip}}\",\n                            \"lan-summary\": \"{{lan-summary}}\",\n                            \"lan-net\": \"{{site12-lan-net}}\",\n                            \"Address\": \"Bologna, Italy\"\n                        }\n                    }\n                ]\n            }\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.1 - Assign Device Group - Hub",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/group/Hubs/object member\",\n            \"data\": [\n                {\n                    \"name\": \"site1-H1\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.2 - Assign Device Group - Edge",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/group/Edge/object member\",\n            \"data\": [\n                {\n                    \"name\": \"site1-1\",\n                    \"vdom\": \"root\"\n                },\n                {\n                    \"name\": \"site1-2\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "3 - Assign System Template",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/devprof/adom/{{adom}}/default/scope member\",\n            \"data\": [\n                {\n                    \"name\": \"site1-H1\",\n                    \"vdom\": \"root\"\n                },\n                {\n                    \"name\": \"site1-1\",\n                    \"vdom\": \"root\"\n                },\n                {\n                    \"name\": \"site1-2\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.1 - Execute CLI Script - Hub",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"function waitOnTask(retries) {",
											"    if (!retries) {",
											"        pm.test(\"Task completed\", function() {",
											"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
											"        });",
											"        postman.setNextRequest(null);",
											"    }",
											"    else {",
											"        pm.sendRequest({",
											"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
											"            method: 'POST',",
											"            header: \"Content-Type:application/json\",",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
											"            }",
											"        }, function(err, response) {",
											"            var jsonData = response.json();",
											"            if (jsonData.result[0].data.percent == 100) {",
											"                // Task completed",
											"                if (jsonData.result[0].data.num_err) {",
											"                    postman.setNextRequest(null);",
											"                }",
											"                pm.test(\"Task completed\", function() {",
											"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
											"                });",
											"            }",
											"            else {",
											"                console.log(\"Task is still not complete\");",
											"                setTimeout(function() {",
											"                    waitOnTask(--retries);",
											"                }, 10000);",
											"            }",
											"        }); ",
											"    }",
											"}",
											"",
											"var jsonData = pm.response.json();",
											"var taskid = jsonData.result[0].data.task;",
											"",
											"waitOnTask(10);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script/execute\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"script\": \"site1-H1-interfaces\",\n                \"scope\": [\n                    {\n                        \"name\": \"site1-H1\",\n                        \"vdom\": \"root\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.2 - Execute CLI Script - Edge 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"function waitOnTask(retries) {",
											"    if (!retries) {",
											"        pm.test(\"Task completed\", function() {",
											"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
											"        });",
											"        postman.setNextRequest(null);",
											"    }",
											"    else {",
											"        pm.sendRequest({",
											"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
											"            method: 'POST',",
											"            header: \"Content-Type:application/json\",",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
											"            }",
											"        }, function(err, response) {",
											"            var jsonData = response.json();",
											"            if (jsonData.result[0].data.percent == 100) {",
											"                // Task completed",
											"                if (jsonData.result[0].data.num_err) {",
											"                    postman.setNextRequest(null);",
											"                }",
											"                pm.test(\"Task completed\", function() {",
											"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
											"                });",
											"            }",
											"            else {",
											"                console.log(\"Task is still not complete\");",
											"                setTimeout(function() {",
											"                    waitOnTask(--retries);",
											"                }, 10000);",
											"            }",
											"        }); ",
											"    }",
											"}",
											"",
											"var jsonData = pm.response.json();",
											"var taskid = jsonData.result[0].data.task;",
											"",
											"waitOnTask(10);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script/execute\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"script\": \"site1-1-interfaces\",\n                \"scope\": [\n                    {\n                        \"name\": \"site1-1\",\n                        \"vdom\": \"root\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.3 - Execute CLI Script - Edge 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"function waitOnTask(retries) {",
											"    if (!retries) {",
											"        pm.test(\"Task completed\", function() {",
											"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
											"        });",
											"        postman.setNextRequest(null);",
											"    }",
											"    else {",
											"        pm.sendRequest({",
											"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
											"            method: 'POST',",
											"            header: \"Content-Type:application/json\",",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
											"            }",
											"        }, function(err, response) {",
											"            var jsonData = response.json();",
											"            if (jsonData.result[0].data.percent == 100) {",
											"                // Task completed",
											"                if (jsonData.result[0].data.num_err) {",
											"                    postman.setNextRequest(null);",
											"                }",
											"                pm.test(\"Task completed\", function() {",
											"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
											"                });",
											"            }",
											"            else {",
											"                console.log(\"Task is still not complete\");",
											"                setTimeout(function() {",
											"                    waitOnTask(--retries);",
											"                }, 10000);",
											"            }",
											"        }); ",
											"    }",
											"}",
											"",
											"var jsonData = pm.response.json();",
											"var taskid = jsonData.result[0].data.task;",
											"",
											"waitOnTask(10);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script/execute\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"script\": \"site1-2-interfaces\",\n                \"scope\": [\n                    {\n                        \"name\": \"site1-2\",\n                        \"vdom\": \"root\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.1 - Generate Certificate - Hub",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"session\": \"{{session}}\",\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/securityconsole/sign/certificate/template\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"template\": \"Hub\",\n                \"scope\": [\n                    {\n                        \"name\": \"site1-H1\"\n                    }\n                ]\n            }\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.2 - Generate Certificates - Edge",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"session\": \"{{session}}\",\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/securityconsole/sign/certificate/template\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"template\": \"Edge\",\n                \"scope\": [\n                    {\n                        \"name\": \"site1-1\"\n                    },\n                    {\n                        \"name\": \"site1-2\"\n                    }\n                ]\n            }\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "6.1 - Assign CLI Template - Hub-Overlay",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"1\",\n    \"session\": \"{{session}}\",\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template/01-Hub-Overlay/scope member\",\n            \"data\": [\n                {\n                    \"name\": \"site1-H1\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "6.2 - Assign CLI Template - Edge-Overlay",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"1\",\n    \"session\": \"{{session}}\",\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template/01-Edge-Overlay/scope member\",\n            \"data\": [\n                {\n                    \"name\": \"site1-1\",\n                    \"vdom\": \"root\"\n                },\n                {\n                    \"name\": \"site1-2\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "7 - Install Configuration - Overlays",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"function waitOnTask(retries) {",
											"    if (!retries) {",
											"        pm.test(\"Task completed\", function() {",
											"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
											"        });",
											"        postman.setNextRequest(null);",
											"    }",
											"    else {",
											"        pm.sendRequest({",
											"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
											"            method: 'POST',",
											"            header: \"Content-Type:application/json\",",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
											"            }",
											"        }, function(err, response) {",
											"            var jsonData = response.json();",
											"            if (jsonData.result[0].data.percent == 100) {",
											"                // Task completed",
											"                if (jsonData.result[0].data.num_err) {",
											"                    postman.setNextRequest(null);",
											"                }",
											"                pm.test(\"Task completed\", function() {",
											"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed for some devices\");     ",
											"                });",
											"            }",
											"            else {",
											"                console.log(\"Task is still not complete\");",
											"                setTimeout(function() {",
											"                    waitOnTask(--retries);",
											"                }, 10000);",
											"            }",
											"        }); ",
											"    }",
											"}",
											"",
											"var jsonData = pm.response.json();",
											"var taskid = jsonData.result[0].data.task;",
											"",
											"waitOnTask(10);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/securityconsole/install/device\",\n            \"data\": [\n                {\n                    \"adom\": \"{{adom}}\",\n                    \"scope\": [\n                        {\n                            \"name\": \"site1-H1\",\n                            \"vdom\": \"root\"\n                        },\n                        {\n                            \"name\": \"site1-1\",\n                            \"vdom\": \"root\"\n                        },\n                        {\n                            \"name\": \"site1-2\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"flags\": \"none\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "8.1 - Assign CLI Template Group - Hub-Template",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"1\",\n    \"session\": \"{{session}}\",\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template-group/Hub-Template/scope member\",\n            \"data\": [\n                {\n                    \"name\": \"site1-H1\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "8.2 - Assign CLI Template Group - Edge-Template",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"1\",\n    \"session\": \"{{session}}\",\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template-group/Edge-Template/scope member\",\n            \"data\": [\n                {\n                    \"name\": \"site1-1\",\n                    \"vdom\": \"root\"\n                },\n                {\n                    \"name\": \"site1-2\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "9.1 - Assign SD-WAN Template - Hub-Template",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/wanprof/adom/{{adom}}/Hub-Template/scope member\",\n            \"data\": [\n                {\n                    \"name\": \"site1-H1\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "9.2 - Assign SD-WAN Template - Edge-Template",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/wanprof/adom/{{adom}}/Edge-Template/scope member\",\n            \"data\": [\n                {\n                    \"name\": \"site1-1\",\n                    \"vdom\": \"root\"\n                },\n                {\n                    \"name\": \"site1-2\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "10.1 - Install Policy - Hubs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"function waitOnTask(retries) {",
											"    if (!retries) {",
											"        pm.test(\"Task completed\", function() {",
											"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
											"        });",
											"        postman.setNextRequest(null);",
											"    }",
											"    else {",
											"        pm.sendRequest({",
											"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
											"            method: 'POST',",
											"            header: \"Content-Type:application/json\",",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
											"            }",
											"        }, function(err, response) {",
											"            var jsonData = response.json();",
											"            if (jsonData.result[0].data.percent == 100) {",
											"                // Task completed",
											"                if (jsonData.result[0].data.num_err) {",
											"                    postman.setNextRequest(null);",
											"                }",
											"                pm.test(\"Task completed\", function() {",
											"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed for some devices\");     ",
											"                });",
											"            }",
											"            else {",
											"                console.log(\"Task is still not complete\");",
											"                setTimeout(function() {",
											"                    waitOnTask(--retries);",
											"                }, 10000);",
											"            }",
											"        }); ",
											"    }",
											"}",
											"",
											"var jsonData = pm.response.json();",
											"var taskid = jsonData.result[0].data.task;",
											"",
											"waitOnTask(10);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/securityconsole/install/package\",\n            \"data\": [\n                {\n                    \"adom\": \"{{adom}}\",\n                    \"pkg\": \"Hubs\",\n                    \"scope\": [\n                        {\n                            \"name\": \"Hubs\"\n                        }\n                    ],\n                    \"flags\": \"none\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "10.2 - Install Policy - Edge",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"function waitOnTask(retries) {",
											"    if (!retries) {",
											"        pm.test(\"Task completed\", function() {",
											"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
											"        });",
											"        postman.setNextRequest(null);",
											"    }",
											"    else {",
											"        pm.sendRequest({",
											"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
											"            method: 'POST',",
											"            header: \"Content-Type:application/json\",",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
											"            }",
											"        }, function(err, response) {",
											"            var jsonData = response.json();",
											"            if (jsonData.result[0].data.percent == 100) {",
											"                // Task completed",
											"                if (jsonData.result[0].data.num_err) {",
											"                    postman.setNextRequest(null);",
											"                }",
											"                pm.test(\"Task completed\", function() {",
											"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed for some devices\");     ",
											"                });",
											"            }",
											"            else {",
											"                console.log(\"Task is still not complete\");",
											"                setTimeout(function() {",
											"                    waitOnTask(--retries);",
											"                }, 10000);",
											"            }",
											"        }); ",
											"    }",
											"}",
											"",
											"var jsonData = pm.response.json();",
											"var taskid = jsonData.result[0].data.task;",
											"",
											"waitOnTask(10);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/securityconsole/install/package\",\n            \"data\": [\n                {\n                    \"adom\": \"{{adom}}\",\n                    \"pkg\": \"Edge\",\n                    \"scope\": [\n                        {\n                            \"name\": \"Edge\"\n                        }\n                    ],\n                    \"flags\": \"none\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "- Breakpoint -",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.setNextRequest(null);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"get\",\n    \"params\": [\n        {\n            \"url\": \"/sys/status\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Dual-Hub",
			"item": [
				{
					"name": "Overlay",
					"item": [
						{
							"name": "1 - Add CLI Template - Hub Overlay",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template\",\n            \"data\": [\n                {\n                    \"name\": \"01-Hub-Overlay\",\n                    \"script\": \"\n                    \nconfig vpn ipsec phase1-interface\n  # Local Region (Edges)\n  edit \\\"EDGE_INET\\\"\n    set type dynamic\n    set interface $(inet-intf)\n    set ike-version 2\n    set authmethod signature\n    set peertype any\n    set mode-cfg enable\n    set proposal aes256-sha256\n    set net-device disable\n    set tunnel-search nexthop\n    set add-route disable\n    set auto-discovery-sender enable\n    set network-overlay enable\n    set network-id $(inet-id)\n    set ipv4-start-ip $(inet-tunnel-net: 4,\n                    2)\n    set ipv4-end-ip $(inet-tunnel-net: 4,\n                    253)\n    set ipv4-netmask $tunnel-mask\n    set certificate \\\"Hub\\\"\n  next\n  edit \\\"EDGE_MPLS\\\"\n    set type dynamic\n    set interface $(mpls-intf)\n    set ike-version 2\n    set authmethod signature\n    set peertype any\n    set mode-cfg enable\n    set proposal aes256-sha256\n    set net-device disable\n    set tunnel-search nexthop\n    set add-route disable\n    set auto-discovery-sender enable\n    set network-overlay enable\n    set network-id $(mpls-id)\n    set ipv4-start-ip $(mpls-tunnel-net: 4,\n                    2)\n    set ipv4-end-ip $(mpls-tunnel-net: 4,\n                    253)\n    set ipv4-netmask $tunnel-mask\n    set certificate \\\"Hub\\\"\n  next\nend\nconfig vpn ipsec phase2-interface\n  edit \\\"EDGE_INET\\\"\n    set phase1name \\\"EDGE_INET\\\"\n    set proposal aes256-sha256\n    set keepalive enable\n  next\n  edit \\\"EDGE_MPLS\\\"\n    set phase1name \\\"EDGE_MPLS\\\"\n    set proposal aes256-sha256\n    set keepalive enable\n  next\nend\nconfig system interface\n  edit \\\"EDGE_INET\\\"\n    set vdom \\\"root\\\"\n    set ip $(inet-tunnel-net: 4,\n                    1) 255.255.255.255\n    set allowaccess ping\n    set type tunnel\n    set remote-ip $(inet-tunnel-net: 4,\n                    254) $(tunnel-mask)\n    set interface $(inet-intf)\n  next\n  edit \\\"EDGE_MPLS\\\"\n    set vdom \\\"root\\\"\n    set ip $(mpls-tunnel-net: 4,\n                    1) 255.255.255.255\n    set allowaccess ping\n    set type tunnel\n    set remote-ip $(mpls-tunnel-net: 4,\n                    254) $(tunnel-mask)\n    set interface $(mpls-intf)\n  next\n  edit \\\"lo-HC\\\"\n    set vdom \\\"root\\\"\n    set ip 10.200.99.1 255.255.255.255\n    set allowaccess ping\n    set type loopback\n  next\nend\n\n                    \"\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "2 - Add CLI Template - Edge Overlay",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template\",\n            \"data\": [\n                {\n                    \"name\": \"01-Edge-DualHub-Overlay\",\n                    \"script\": \"\n                    \nconfig vpn ipsec phase1-interface\n  edit \\\"H1_INET\\\"\n    set interface $(inet-intf)\n    set ike-version 2\n    set authmethod signature\n    set keylife 28800\n    set peertype any\n    set net-device enable\n    set mode-cfg enable\n    set proposal aes256-sha256\n    set add-route disable\n    set idle-timeout enable\n    set auto-discovery-receiver enable\n    set network-overlay enable\n    set network-id $(h1-inet-id)\n    set remote-gw $(h1-inet-ip)\n    set certificate \\\"Edge\\\"\n    set dpd-retrycount 3\n    set dpd-retryinterval 5\n  next\n  edit \\\"H1_MPLS\\\"\n    set interface $(mpls-intf)\n    set ike-version 2\n    set authmethod signature\n    set keylife 28800\n    set peertype any\n    set net-device enable\n    set mode-cfg enable\n    set proposal aes256-sha256\n    set add-route disable\n    set idle-timeout enable\n    set auto-discovery-receiver enable\n    set network-overlay enable\n    set network-id $(h1-mpls-id)\n    set remote-gw $(h1-mpls-ip)\n    set certificate \\\"Edge\\\"\n    set dpd-retrycount 3\n    set dpd-retryinterval 5\n  next\n  edit \\\"H2_INET\\\"\n    set interface $(inet-intf)\n    set ike-version 2\n    set authmethod signature\n    set keylife 28800\n    set peertype any\n    set net-device enable\n    set mode-cfg enable\n    set proposal aes256-sha256\n    set add-route disable\n    set idle-timeout enable\n    set auto-discovery-receiver enable\n    set network-overlay enable\n    set network-id $(h2-inet-id)\n    set remote-gw $(h2-inet-ip)\n    set certificate \\\"Edge\\\"\n    set dpd-retrycount 3\n    set dpd-retryinterval 5\n  next\n  edit \\\"H2_MPLS\\\"\n    set interface $(mpls-intf)\n    set ike-version 2\n    set authmethod signature\n    set keylife 28800\n    set peertype any\n    set net-device enable\n    set mode-cfg enable\n    set proposal aes256-sha256\n    set add-route disable\n    set idle-timeout enable\n    set auto-discovery-receiver enable\n    set network-overlay enable\n    set network-id $(h2-mpls-id)\n    set remote-gw $(h2-mpls-ip)\n    set certificate \\\"Edge\\\"\n    set dpd-retrycount 3\n    set dpd-retryinterval 5\n  next\nend\nconfig vpn ipsec phase2-interface\n  edit \\\"H1_INET\\\"\n    set phase1name \\\"H1_INET\\\"\n    set proposal aes256-sha256\n    set keepalive enable\n    set keylifeseconds 3600\n  next\n  edit \\\"H1_MPLS\\\"\n    set phase1name \\\"H1_MPLS\\\"\n    set proposal aes256-sha256\n    set keepalive enable\n    set keylifeseconds 3600\n  next\n  edit \\\"H2_INET\\\"\n    set phase1name \\\"H2_INET\\\"\n    set proposal aes256-sha256\n    set keepalive enable\n    set keylifeseconds 3600\n  next\n  edit \\\"H2_MPLS\\\"\n    set phase1name \\\"H2_MPLS\\\"\n    set proposal aes256-sha256\n    set keepalive enable\n    set keylifeseconds 3600\n  next\nend\nconfig system interface\n  edit \\\"H1_INET\\\"\n    set vdom \\\"root\\\"\n    set allowaccess ping\n    set type tunnel\n    set interface $(inet-intf)\n  next\n  edit \\\"H1_MPLS\\\"\n    set vdom \\\"root\\\"\n    set allowaccess ping\n    set type tunnel\n    set interface $(mpls-intf)\n  next\n  edit \\\"H2_INET\\\"\n    set vdom \\\"root\\\"\n    set allowaccess ping\n    set type tunnel\n    set interface $(inet-intf)\n  next\n  edit \\\"H2_MPLS\\\"\n    set vdom \\\"root\\\"\n    set allowaccess ping\n    set type tunnel\n    set interface $(mpls-intf)\n  next\nend\n\n\n                    \"\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "3 - Set CLI Template Groups",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template-group\",\n            \"data\": [\n                {\n                    \"name\": \"Hub-Template\",\n                    \"member\": [\n                        \"01-Hub-Overlay\"\n                    ]\n                },\n                {\n                    \"name\": \"Edge-DualHub-Template\",\n                    \"member\": [\n                        \"01-Edge-DualHub-Overlay\"\n                    ]\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Routing",
					"item": [
						{
							"name": "1 - Add CLI Template - Hub Routing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template\",\n            \"data\": [\n                {\n                    \"name\": \"02-Hub-Routing\",\n                    \"script\": \"\n                    \nconfig router bgp\n  set as $(as)\n  set router-id $(lan-net:4,1)\n  set keepalive-timer 5\n  set holdtime-timer 15\n  set ibgp-multipath enable\n  set ebgp-multipath enable\n  set additional-path enable\n  # additional-path-select = max. number of overlays * max. number of hubs\n  set additional-path-select 2\n  config neighbor-group\n    edit \\\"EDGE\\\"\n      set soft-reconfiguration enable\n      set advertisement-interval 1\n      set link-down-failover enable\n      set next-hop-self enable\n      set remote-as $(as)\n      set additional-path send\n      # adv-additional-path = max. number of overlays * max. number of hubs\n      set adv-additional-path 2\n      set route-reflector-client enable\n    next\n  end\n  config neighbor-range\n    edit 1\n      set prefix 10.200.0.0/14\n      set neighbor-group \\\"EDGE\\\"\n    next\n  end\n  config network\n    edit 1\n      set prefix $(lan-net)\n    next\n  end\nend\n\nconfig router policy\n  edit 1\n    set input-device \\\"EDGE_INET\\\"\n    set output-device \\\"EDGE_INET\\\"\n    set dst 10.0.0.0/8\n  next\n  edit 2\n    set input-device \\\"EDGE_MPLS\\\"\n    set output-device \\\"EDGE_MPLS\\\"\n    set dst 10.0.0.0/8\n  next\nend\n\nconfig router static\n  edit 101\n    set dst 10.0.0.0/8\n    set blackhole enable\n    set comment \\\"Avoid potential leak of corporate traffic to underlay\\\"\n  next\n  edit 102\n    set dst 10.200.0.0/14\n    set blackhole enable\n    set comment \\\"Avoid potential recursive resolution of corporate BGP routes via underlay\\\"\n  next\nend\n\n                    \"\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "2 - Add CLI Template - Edge Routing",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template\",\n            \"data\": [\n                {\n                    \"name\": \"02-Edge-DualHub-Routing\",\n                    \"script\": \"\n                    \nconfig router static\n  edit 101\n    set dst $(lan-summary)\n    set blackhole enable\n    set comment \\\"Avoid potential leak of corporate traffic to underlay\\\"\n  next\n  edit 102\n    set dst 10.200.0.0/14\n    set device \\\"H1_INET\\\"\n    set comment \\\"Cross-overlay BGP NH reachability\\\"\n  next\n  edit 103\n    set dst 10.200.0.0/14\n    set device \\\"H1_MPLS\\\"\n    set comment \\\"Cross-overlay BGP NH reachability\\\"\n  next\nend\n\nconfig router bgp\n  set as $(as)\n  set router-id $(lan-net:4,1)\n  set keepalive-timer 5\n  set holdtime-timer 15\n  set ibgp-multipath enable\n  set additional-path enable\n  # additional-path-select = max. number of overlays * max. number of hubs\n  set additional-path-select 2\n  config neighbor\n    edit $(h1-inet-tunnel-ip)\n      set soft-reconfiguration enable\n      set advertisement-interval 1\n      set link-down-failover enable\n      set interface \\\"H1_INET\\\"\n      set connect-timer 1\n      set remote-as $(as)\n      set additional-path receive\n    next\n    edit $(h1-mpls-tunnel-ip)\n      set soft-reconfiguration enable\n      set advertisement-interval 1\n      set link-down-failover enable\n      set interface \\\"H1_MPLS\\\"\n      set connect-timer 1\n      set remote-as $(as)\n      set additional-path receive\n    next\n    edit $(h2-inet-tunnel-ip)\n      set soft-reconfiguration enable\n      set advertisement-interval 1\n      set link-down-failover enable\n      set interface \\\"H2_INET\\\"\n      set connect-timer 1\n      set remote-as $(as)\n      set additional-path receive\n    next\n    edit $(h2-mpls-tunnel-ip)\n      set soft-reconfiguration enable\n      set advertisement-interval 1\n      set link-down-failover enable\n      set interface \\\"H2_MPLS\\\"\n      set connect-timer 1\n      set remote-as $(as)\n      set additional-path receive\n    next\n  end\n  config network\n    edit 1\n      set prefix $(lan-net)\n    next\n  end\nend\n\n                    \"\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "3 - Add to CLI Template Group - Hub",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template-group/Hub-Template/member\",\n            \"data\": [\n                \"02-Hub-Routing\"\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "4 - Add to CLI Template Group - Edge",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template-group/Edge-DualHub-Template/member\",\n            \"data\": [\n                \"02-Edge-DualHub-Routing\"\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "SD-WAN",
					"item": [
						{
							"name": "1 - Create Normalized Interfaces",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/interface/\",\n            \"data\": [\n                {\n                    \"name\": \"EDGE_INET\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"EDGE_INET\",\n                    \"color\": 2\n                },\n                {\n                    \"name\": \"EDGE_MPLS\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"EDGE_MPLS\",\n                    \"color\": 2\n                },\n                {\n                    \"name\": \"H1_INET\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"H1_INET\",\n                    \"color\": 2\n                },\n                {\n                    \"name\": \"H1_MPLS\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"H1_MPLS\",\n                    \"color\": 2\n                },\n                                {\n                    \"name\": \"H2_INET\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"H2_INET\",\n                    \"color\": 2\n                },\n                {\n                    \"name\": \"H2_MPLS\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"H2_MPLS\",\n                    \"color\": 2\n                },\n                {\n                    \"name\": \"UL_INET\",\n                    \"single-intf\": 1,\n                    \"default-mapping\": 1,\n                    \"defmap-intf\": \"{{inet-intf}}\",\n                    \"color\": 2\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "2 - Create SD-WAN Interface Members",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/virtual-wan-link/members\",\n            \"data\": [\n                {\n                    \"name\": \"EDGE_INET\",\n                    \"interface\": \"EDGE_INET\",\n                    \"cost\": 0,\n                    \"weight\": 1,\n                    \"priority\": 10,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"EDGE_MPLS\",\n                    \"interface\": \"EDGE_MPLS\",\n                    \"cost\": 0,\n                    \"weight\": 1,\n                    \"priority\": 10,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"H1_INET\",\n                    \"interface\": \"H1_INET\",\n                    \"cost\": 0,\n                    \"weight\": 1,\n                    \"priority\": 10,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"H1_MPLS\",\n                    \"interface\": \"H1_MPLS\",\n                    \"cost\": 0,\n                    \"weight\": 1,\n                    \"priority\": 10,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"H2_INET\",\n                    \"interface\": \"H2_INET\",\n                    \"cost\": 0,\n                    \"weight\": 1,\n                    \"priority\": 10,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"H2_MPLS\",\n                    \"interface\": \"H2_MPLS\",\n                    \"cost\": 0,\n                    \"weight\": 1,\n                    \"priority\": 10,\n                    \"status\": 1\n                },\n                {\n                    \"name\": \"UL_INET\",\n                    \"interface\": \"UL_INET\",\n                    \"cost\": 0,\n                    \"weight\": 1,\n                    \"priority\": 0,\n                    \"status\": 1\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "3 - Create Health Check Servers",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/dynamic/virtual-wan-link/server\",\n            \"data\": [\n                {\n                    \"name\": \"HUB\",\n                    \"description\": null,\n                    \"server\": [\n                        \"10.200.99.1\"\n                    ],\n                    \"dynamic_mapping\": null\n                },\n                {\n                    \"name\": \"Internet\",\n                    \"description\": null,\n                    \"server\": [\n                        \"www.fortinet.com\"\n                    ],\n                    \"dynamic_mapping\": null\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "4 - Create SDWAN Template - Hub",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/wanprof/adom/{{adom}}/\",\n            \"data\": {\n            \t\"name\": \"Hub-Template\",\n            \t\"type\": \"wanprof\"\n            \t\n            }\n        }\n            \n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "5 - Populate SDWAN Template - Hub",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"replace\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/wanprof/Hub-Template/system/sdwan\",\n            \"data\": {\n                \"status\": 1,\n                \"load-balance-mode\": 1,\n                \"fail-detect\": \"disable\",\n                \"zone\": [\n                    {\n                        \"name\": \"virtual-wan-link\"\n                    },\n                    {\n                        \"name\": \"underlay\"\n                    },\n                    {\n                        \"name\": \"overlay\"\n                    }\n                ],\n                \"members\": [\n                    {\n                        \"_dynamic-member\": \"UL_INET\",\n                        \"zone\": \"underlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"EDGE_INET\",\n                        \"zone\": \"overlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"EDGE_MPLS\",\n                        \"zone\": \"overlay\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "6 - Create SDWAN Template - Edge",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/wanprof/adom/{{adom}}/\",\n            \"data\": {\n            \t\"name\": \"Edge-DualHub-Template\",\n            \t\"type\": \"wanprof\"\n            \t\n            }\n        }\n            \n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "7 - Populate SDWAN Template - Edge",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"replace\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/wanprof/Edge-DualHub-Template/system/sdwan\",\n            \"data\": {\n                \"status\": 1,\n                \"load-balance-mode\": 1,\n                \"fail-detect\": \"disable\",\n                \"zone\": [\n                    {\n                        \"name\": \"virtual-wan-link\"\n                    },\n                    {\n                        \"name\": \"underlay\"\n                    },\n                    {\n                        \"name\": \"overlay\"\n                    }\n                ],\n                \"members\": [\n                    {\n                        \"_dynamic-member\": \"UL_INET\",\n                        \"zone\": \"underlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"H1_INET\",\n                        \"zone\": \"overlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"H1_MPLS\",\n                        \"zone\": \"overlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"H2_INET\",\n                        \"zone\": \"overlay\"\n                    },\n                    {\n                        \"_dynamic-member\": \"H2_MPLS\",\n                        \"zone\": \"overlay\"\n                    }\n                ],\n                \"health-check\": [\n                    {\n                        \"name\": \"HUB\",\n                        \"_dynamic-server\": [\n                            \"HUB\"\n                        ],\n                        \"protocol\": 1,\n                        \"members\": [\n                            2,\n                            3,\n                            4,\n                            5\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 1,\n                        \"update-static-route\": 1,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 100,\n                                \"link-cost-factor\": 1\n                            }\n                        ]\n                    },\n                    {\n                        \"name\": \"Internet\",\n                        \"_dynamic-server\": [\n                            \"Internet\"\n                        ],\n                        \"protocol\": 1,\n                        \"members\": [\n                            1,\n                            3,\n                            5\n                        ],\n                        \"sla-fail-log-period\": 10,\n                        \"sla-pass-log-period\": 10,\n                        \"failtime\": 5,\n                        \"recoverytime\": 5,\n                        \"update-cascade-interface\": 1,\n                        \"update-static-route\": 1,\n                        \"sla\": [\n                            {\n                                \"id\": 1,\n                                \"latency-threshold\": 250,\n                                \"link-cost-factor\": 1\n                            }\n                        ]\n                    }\n                ],\n                \"service\": [\n                    {\n                        \"id\": 1,\n                        \"name\": \"Corporate-H1\",\n                        \"src\": \"CORP_LAN\",\n                        \"dst\": \"CORP_LAN\",\n                        \"dst-negate\": 0,\n                        \"protocol\": 0,\n                        \"role\": 3,\n                        \"mode\": 4,\n                        \"sla\": [\n                            {\n                                \"health-check\": \"HUB\",\n                                \"id\": 1\n                            }\n                        ],\n                        \"priority-members\": [\n                            \"2\",\n                            \"3\"\n                        ],\n                        \"route-tag\": 0,\n                        \"gateway\": 0,\n                        \"groups\": [],\n                        \"addr-mode\": 7,\n                        \"default\": 0,\n                        \"hold-down-time\": 20,\n                        \"input-device\": [],\n                        \"internet-service\": 0,\n                        \"link-cost-threshold\": 10,\n                        \"sla-compare-method\": 0,\n                        \"src-negate\": 0,\n                        \"standalone-action\": 0,\n                        \"status\": 1\n                    },\n                    {\n                        \"id\": 2,\n                        \"name\": \"Corporate-H2\",\n                        \"src\": \"CORP_LAN\",\n                        \"dst\": \"CORP_LAN\",\n                        \"dst-negate\": 0,\n                        \"protocol\": 0,\n                        \"role\": 3,\n                        \"mode\": 4,\n                        \"sla\": [\n                            {\n                                \"health-check\": \"HUB\",\n                                \"id\": 1\n                            }\n                        ],\n                        \"priority-members\": [\n                            \"4\",\n                            \"5\"\n                        ],\n                        \"route-tag\": 0,\n                        \"gateway\": 0,\n                        \"groups\": [],\n                        \"addr-mode\": 7,\n                        \"default\": 0,\n                        \"hold-down-time\": 20,\n                        \"input-device\": [],\n                        \"internet-service\": 0,\n                        \"link-cost-threshold\": 10,\n                        \"sla-compare-method\": 0,\n                        \"src-negate\": 0,\n                        \"standalone-action\": 0,\n                        \"status\": 1\n                    },\n                    {\n                        \"id\": 3,\n                        \"name\": \"Internet\",\n                        \"src\": [],\n                        \"dst\": \"all\",\n                        \"dst-negate\": 0,\n                        \"protocol\": 0,\n                        \"role\": 3,\n                        \"mode\": 4,\n                        \"sla\": [\n                            {\n                                \"health-check\": \"Internet\",\n                                \"id\": 1\n                            }\n                        ],\n                        \"priority-members\": [\n                            \"1\",\n                            \"3\",\n                            \"5\"\n                        ],\n                        \"route-tag\": 0,\n                        \"gateway\": 0,\n                        \"groups\": [],\n                        \"addr-mode\": 7,\n                        \"default\": 0,\n                        \"hold-down-time\": 0,\n                        \"input-device\": [],\n                        \"link-cost-threshold\": 10,\n                        \"sla-compare-method\": 0,\n                        \"src-negate\": 0,\n                        \"standalone-action\": 0,\n                        \"status\": 1\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "8 - Add CLI Template - Defaults",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template\",\n            \"data\": [\n                {\n                    \"name\": \"03-Default\",\n                    \"script\": \"\n\nconfig router static\n  edit 100\n    set sdwan enable\n  next\nend\n\n                    \"\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "9 - Add to CLI Template Group - Hub",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template-group/Hub-Template/member\",\n            \"data\": [\n                \"03-Default\"\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "10 - Add to CLI Template Group - Edge",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template-group/Edge-DualHub-Template/member\",\n            \"data\": [\n                \"03-Default\"\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "11 - Add Firewall Rules - Hubs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/pkg/Hubs/firewall/policy/\",\n            \"data\": [\n                {\n                    \"name\": \"Corporate\",\n                    \"policyid\": 1,\n                    \"srcintf\": [\n                        \"lan\",\n                        \"overlay\"\n                    ],\n                    \"dstintf\": [\n                        \"lan\",\n                        \"overlay\"\n                    ],\n                    \"srcaddr\": \"CORP_LAN\",\n                    \"dstaddr\": \"CORP_LAN\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"anti-replay\": 0,\n                    \"tcp-session-without-syn\": 0,\n                    \"profile-protocol-options\": [],\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2\n                },\n                {\n                    \"name\": \"Health-Check\",\n                    \"policyid\": 2,\n                    \"srcintf\": [\n                        \"overlay\"\n                    ],\n                    \"dstintf\": \"lo-HC\",\n                    \"srcaddr\": \"all\",\n                    \"dstaddr\": \"all\",\n                    \"service\": \"PING\",\n                    \"action\": 1,\n                    \"profile-protocol-options\": [],\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 3\n                },\n                {\n                    \"name\": \"Internet (DIA)\",\n                    \"policyid\": 3,\n                    \"srcintf\": \"lan\",\n                    \"dstintf\": \"underlay\",\n                    \"srcaddr\": \"all\",\n                    \"dstaddr\": \"all\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"nat\": 1,\n                    \"utm-status\": 1,\n                    \"application-list\": [\n                        \"default\"\n                    ],\n                    \"ssl-ssh-profile\": [\n                        \"deep-inspection\"\n                    ],\n                    \"profile-protocol-options\": [],\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2\n                },\n                {\n                    \"name\": \"Internet (RIA)\",\n                    \"policyid\": 3,\n                    \"srcintf\": \"overlay\",\n                    \"dstintf\": \"underlay\",\n                    \"srcaddr\": \"all\",\n                    \"dstaddr\": \"all\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"nat\": 1,\n                    \"utm-status\": 1,\n                    \"application-list\": [\n                        \"default\"\n                    ],\n                    \"ssl-ssh-profile\": [\n                        \"deep-inspection\"\n                    ],\n                    \"profile-protocol-options\": [],\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "12 - Add Firewall Rules - Edge",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/pkg/Edge/firewall/policy/\",\n            \"data\": [\n                {\n                    \"name\": \"Corporate\",\n                    \"policyid\": 1,\n                    \"srcintf\": [\n                        \"lan\",\n                        \"overlay\"\n                    ],\n                    \"dstintf\": [\n                        \"lan\",\n                        \"overlay\"\n                    ],\n                    \"srcaddr\": \"CORP_LAN\",\n                    \"dstaddr\": \"CORP_LAN\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"profile-protocol-options\": [],\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2\n                },\n                {\n                    \"name\": \"Internet (DIA)\",\n                    \"policyid\": 2,\n                    \"srcintf\": \"lan\",\n                    \"dstintf\": \"underlay\",\n                    \"srcaddr\": \"all\",\n                    \"dstaddr\": \"all\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"nat\": 1,\n                    \"utm-status\": 1,\n                    \"application-list\": [\n                        \"default\"\n                    ],\n                    \"ssl-ssh-profile\": [\n                        \"deep-inspection\"\n                    ],\n                    \"profile-protocol-options\": [],\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2\n                },\n                {\n                    \"name\": \"Internet (RIA)\",\n                    \"policyid\": 3,\n                    \"srcintf\": \"lan\",\n                    \"dstintf\": \"overlay\",\n                    \"srcaddr\": \"all\",\n                    \"dstaddr\": \"all\",\n                    \"service\": \"ALL\",\n                    \"action\": 1,\n                    \"nat\": 0,\n                    \"utm-status\": 1,\n                    \"application-list\": [\n                        \"default\"\n                    ],\n                    \"profile-protocol-options\": [],\n                    \"status\": 1,\n                    \"schedule\": \"always\",\n                    \"logtraffic\": 2\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Deploy",
					"item": [
						{
							"name": "1 - Add Model Devices",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"function waitOnTask(retries) {",
											"    if (!retries) {",
											"        pm.test(\"Task completed\", function() {",
											"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
											"        });",
											"        postman.setNextRequest(null);",
											"    }",
											"    else {",
											"        pm.sendRequest({",
											"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
											"            method: 'POST',",
											"            header: \"Content-Type:application/json\",",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
											"            }",
											"        }, function(err, response) {",
											"            var jsonData = response.json();",
											"            if (jsonData.result[0].data.percent == 100) {",
											"                // Task completed",
											"                if (jsonData.result[0].data.num_err) {",
											"                    postman.setNextRequest(null);",
											"                }",
											"                pm.test(\"Task completed\", function() {",
											"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
											"                });",
											"            }",
											"            else {",
											"                console.log(\"Task is still not complete\");",
											"                setTimeout(function() {",
											"                    waitOnTask(--retries);",
											"                }, 10000);",
											"            }",
											"        }); ",
											"    }",
											"}",
											"",
											"var jsonData = pm.response.json();",
											"var taskid = jsonData.result[0].data.taskid;",
											"",
											"waitOnTask(10);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"session\": \"{{session}}\",\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvm/cmd/add/dev-list\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"flags\": [\n                    \"create_task\",\n                    \"nonblocking\"\n                ],\n                \"add-dev-list\": [\n                    {\n                        \"name\": \"site1-H1\",\n                        \"device action\": \"add_model\",\n                        \"os_ver\": 6,\n                        \"version\": 600,\n                        \"os_type\": 0,\n                        \"mr\": 4,\n                        \"platform_str\": \"FortiGate-VM64-KVM\",\n                        \"mgmt_mode\": 3,\n                        \"flags\": 67371040,\n                        \"prefer_img_ver\": \"6.4.6-b1879\",\n                        \"psk\": \"secret-1-H1\",\n                        \"faz.perm\": 15,\n                        \"faz.quota\": 0,\n                        \"latitude\": \"48.858673\",\n                        \"longitude\": \"2.351281\",\n                        \"meta fields\": {\n                            \"as\": \"{{as}}\",\n                            \"inet-id\": \"{{h1-inet-id}}\",\n                            \"inet-intf\": \"{{inet-intf}}\",\n                            \"inet-tunnel-net\": \"{{h1-inet-tunnel-net}}\",\n                            \"mpls-id\": \"{{h1-mpls-id}}\",\n                            \"mpls-intf\": \"{{mpls-intf}}\",\n                            \"mpls-tunnel-net\": \"{{h1-mpls-tunnel-net}}\",\n                            \"tunnel-mask\": \"{{tunnel-mask}}\",\n                            \"lan-summary\": \"{{lan-summary}}\",\n                            \"lan-net\": \"{{h1-lan-net}}\",\n                            \"Address\": \"Paris, France\"\n                        }\n                    },\n                    {\n                        \"name\": \"site1-H2\",\n                        \"device action\": \"add_model\",\n                        \"os_ver\": 6,\n                        \"version\": 600,\n                        \"os_type\": 0,\n                        \"mr\": 4,\n                        \"platform_str\": \"FortiGate-VM64-KVM\",\n                        \"mgmt_mode\": 3,\n                        \"flags\": 67371040,\n                        \"prefer_img_ver\": \"6.4.6-b1879\",\n                        \"psk\": \"secret-1-H2\",\n                        \"faz.perm\": 15,\n                        \"faz.quota\": 0,\n                        \"latitude\": \"52.370083\",\n                        \"longitude\": \"4.896625\",\n                        \"meta fields\": {\n                            \"as\": \"{{as}}\",\n                            \"inet-id\": \"{{h2-inet-id}}\",\n                            \"inet-intf\": \"{{inet-intf}}\",\n                            \"inet-tunnel-net\": \"{{h2-inet-tunnel-net}}\",\n                            \"mpls-id\": \"{{h2-mpls-id}}\",\n                            \"mpls-intf\": \"{{mpls-intf}}\",\n                            \"mpls-tunnel-net\": \"{{h2-mpls-tunnel-net}}\",\n                            \"tunnel-mask\": \"{{tunnel-mask}}\",\n                            \"lan-summary\": \"{{lan-summary}}\",\n                            \"lan-net\": \"{{h2-lan-net}}\",\n                            \"Address\": \"Amsterdam, The Netherlands\"\n                        }\n                    },\n                    {\n                        \"name\": \"site1-1\",\n                        \"device action\": \"add_model\",\n                        \"os_ver\": 6,\n                        \"version\": 600,\n                        \"os_type\": 0,\n                        \"mr\": 4,\n                        \"platform_str\": \"FortiGate-VM64-KVM\",\n                        \"mgmt_mode\": 3,\n                        \"flags\": 67371040,\n                        \"prefer_img_ver\": \"6.4.6-b1879\",\n                        \"psk\": \"secret-1-1\",\n                        \"faz.perm\": 15,\n                        \"faz.quota\": 0,\n                        \"latitude\": \"43.6164\",\n                        \"longitude\": \"7.0552\",\n                        \"meta fields\": {\n                            \"as\": \"{{as}}\",\n                            \"inet-intf\": \"{{inet-intf}}\",\n                            \"mpls-intf\": \"{{mpls-intf}}\",\n                            \"h1-inet-id\": \"{{h1-inet-id}}\",\n                            \"h1-inet-ip\": \"{{h1-inet-ip}}\",\n                            \"h1-inet-tunnel-ip\": \"{{h1-inet-tunnel-ip}}\",\n                            \"h1-mpls-id\": \"{{h1-mpls-id}}\",\n                            \"h1-mpls-ip\": \"{{h1-mpls-ip}}\",\n                            \"h1-mpls-tunnel-ip\": \"{{h1-mpls-tunnel-ip}}\",\n                            \"h2-inet-id\": \"{{h2-inet-id}}\",\n                            \"h2-inet-ip\": \"{{h2-inet-ip}}\",\n                            \"h2-inet-tunnel-ip\": \"{{h2-inet-tunnel-ip}}\",\n                            \"h2-mpls-id\": \"{{h2-mpls-id}}\",\n                            \"h2-mpls-ip\": \"{{h2-mpls-ip}}\",\n                            \"h2-mpls-tunnel-ip\": \"{{h2-mpls-tunnel-ip}}\",\n                            \"lan-summary\": \"{{lan-summary}}\",\n                            \"lan-net\": \"{{site11-lan-net}}\",\n                            \"Address\": \"Sophia Antipolis, France\"\n                        }\n                    },\n                    {\n                        \"name\": \"site1-2\",\n                        \"device action\": \"add_model\",\n                        \"os_ver\": 6,\n                        \"version\": 600,\n                        \"os_type\": 0,\n                        \"mr\": 4,\n                        \"platform_str\": \"FortiGate-VM64-KVM\",\n                        \"mgmt_mode\": 3,\n                        \"flags\": 67371040,\n                        \"prefer_img_ver\": \"6.4.6-b1879\",\n                        \"psk\": \"secret-1-2\",\n                        \"faz.perm\": 15,\n                        \"faz.quota\": 0,\n                        \"latitude\": \"44.4949\",\n                        \"longitude\": \"11.3426\",\n                        \"meta fields\": {\n                            \"as\": \"{{as}}\",\n                            \"inet-intf\": \"{{inet-intf}}\",\n                            \"mpls-intf\": \"{{mpls-intf}}\",\n                            \"h1-inet-id\": \"{{h1-inet-id}}\",\n                            \"h1-inet-ip\": \"{{h1-inet-ip}}\",\n                            \"h1-inet-tunnel-ip\": \"{{h1-inet-tunnel-ip}}\",\n                            \"h1-mpls-id\": \"{{h1-mpls-id}}\",\n                            \"h1-mpls-ip\": \"{{h1-mpls-ip}}\",\n                            \"h1-mpls-tunnel-ip\": \"{{h1-mpls-tunnel-ip}}\",\n                            \"h2-inet-id\": \"{{h2-inet-id}}\",\n                            \"h2-inet-ip\": \"{{h2-inet-ip}}\",\n                            \"h2-inet-tunnel-ip\": \"{{h2-inet-tunnel-ip}}\",\n                            \"h2-mpls-id\": \"{{h2-mpls-id}}\",\n                            \"h2-mpls-ip\": \"{{h2-mpls-ip}}\",\n                            \"h2-mpls-tunnel-ip\": \"{{h2-mpls-tunnel-ip}}\",\n                            \"lan-summary\": \"{{lan-summary}}\",\n                            \"lan-net\": \"{{site12-lan-net}}\",\n                            \"Address\": \"Bologna, Italy\"\n                        }\n                    }\n                ]\n            }\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.1 - Assign Device Group - Hubs",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/group/Hubs/object member\",\n            \"data\": [\n                {\n                    \"name\": \"site1-H1\",\n                    \"vdom\": \"root\"\n                },\n                {\n                    \"name\": \"site1-H2\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "2.2 - Assign Device Group - Edge",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/group/Edge/object member\",\n            \"data\": [\n                {\n                    \"name\": \"site1-1\",\n                    \"vdom\": \"root\"\n                },\n                {\n                    \"name\": \"site1-2\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "3 - Assign System Template",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"set\",\n    \"params\": [\n        {\n            \"url\": \"/pm/devprof/adom/{{adom}}/default/scope member\",\n            \"data\": [\n                {\n                    \"name\": \"site1-H1\",\n                    \"vdom\": \"root\"\n                },\n                {\n                    \"name\": \"site1-H2\",\n                    \"vdom\": \"root\"\n                },\n                {\n                    \"name\": \"site1-1\",\n                    \"vdom\": \"root\"\n                },\n                {\n                    \"name\": \"site1-2\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.1 - Execute CLI Script - Hub 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"function waitOnTask(retries) {",
											"    if (!retries) {",
											"        pm.test(\"Task completed\", function() {",
											"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
											"        });",
											"        postman.setNextRequest(null);",
											"    }",
											"    else {",
											"        pm.sendRequest({",
											"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
											"            method: 'POST',",
											"            header: \"Content-Type:application/json\",",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
											"            }",
											"        }, function(err, response) {",
											"            var jsonData = response.json();",
											"            if (jsonData.result[0].data.percent == 100) {",
											"                // Task completed",
											"                if (jsonData.result[0].data.num_err) {",
											"                    postman.setNextRequest(null);",
											"                }",
											"                pm.test(\"Task completed\", function() {",
											"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
											"                });",
											"            }",
											"            else {",
											"                console.log(\"Task is still not complete\");",
											"                setTimeout(function() {",
											"                    waitOnTask(--retries);",
											"                }, 10000);",
											"            }",
											"        }); ",
											"    }",
											"}",
											"",
											"var jsonData = pm.response.json();",
											"var taskid = jsonData.result[0].data.task;",
											"",
											"waitOnTask(10);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script/execute\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"script\": \"site1-H1-interfaces\",\n                \"scope\": [\n                    {\n                        \"name\": \"site1-H1\",\n                        \"vdom\": \"root\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.2 - Execute CLI Script - Hub 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"function waitOnTask(retries) {",
											"    if (!retries) {",
											"        pm.test(\"Task completed\", function() {",
											"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
											"        });",
											"        postman.setNextRequest(null);",
											"    }",
											"    else {",
											"        pm.sendRequest({",
											"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
											"            method: 'POST',",
											"            header: \"Content-Type:application/json\",",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
											"            }",
											"        }, function(err, response) {",
											"            var jsonData = response.json();",
											"            if (jsonData.result[0].data.percent == 100) {",
											"                // Task completed",
											"                if (jsonData.result[0].data.num_err) {",
											"                    postman.setNextRequest(null);",
											"                }",
											"                pm.test(\"Task completed\", function() {",
											"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
											"                });",
											"            }",
											"            else {",
											"                console.log(\"Task is still not complete\");",
											"                setTimeout(function() {",
											"                    waitOnTask(--retries);",
											"                }, 10000);",
											"            }",
											"        }); ",
											"    }",
											"}",
											"",
											"var jsonData = pm.response.json();",
											"var taskid = jsonData.result[0].data.task;",
											"",
											"waitOnTask(10);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script/execute\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"script\": \"site1-H2-interfaces\",\n                \"scope\": [\n                    {\n                        \"name\": \"site1-H2\",\n                        \"vdom\": \"root\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.3 - Execute CLI Script - Edge 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"function waitOnTask(retries) {",
											"    if (!retries) {",
											"        pm.test(\"Task completed\", function() {",
											"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
											"        });",
											"        postman.setNextRequest(null);",
											"    }",
											"    else {",
											"        pm.sendRequest({",
											"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
											"            method: 'POST',",
											"            header: \"Content-Type:application/json\",",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
											"            }",
											"        }, function(err, response) {",
											"            var jsonData = response.json();",
											"            if (jsonData.result[0].data.percent == 100) {",
											"                // Task completed",
											"                if (jsonData.result[0].data.num_err) {",
											"                    postman.setNextRequest(null);",
											"                }",
											"                pm.test(\"Task completed\", function() {",
											"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
											"                });",
											"            }",
											"            else {",
											"                console.log(\"Task is still not complete\");",
											"                setTimeout(function() {",
											"                    waitOnTask(--retries);",
											"                }, 10000);",
											"            }",
											"        }); ",
											"    }",
											"}",
											"",
											"var jsonData = pm.response.json();",
											"var taskid = jsonData.result[0].data.task;",
											"",
											"waitOnTask(10);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script/execute\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"script\": \"site1-1-interfaces\",\n                \"scope\": [\n                    {\n                        \"name\": \"site1-1\",\n                        \"vdom\": \"root\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "4.4 - Execute CLI Script - Edge 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"function waitOnTask(retries) {",
											"    if (!retries) {",
											"        pm.test(\"Task completed\", function() {",
											"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
											"        });",
											"        postman.setNextRequest(null);",
											"    }",
											"    else {",
											"        pm.sendRequest({",
											"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
											"            method: 'POST',",
											"            header: \"Content-Type:application/json\",",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
											"            }",
											"        }, function(err, response) {",
											"            var jsonData = response.json();",
											"            if (jsonData.result[0].data.percent == 100) {",
											"                // Task completed",
											"                if (jsonData.result[0].data.num_err) {",
											"                    postman.setNextRequest(null);",
											"                }",
											"                pm.test(\"Task completed\", function() {",
											"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed to add some devices\");     ",
											"                });",
											"            }",
											"            else {",
											"                console.log(\"Task is still not complete\");",
											"                setTimeout(function() {",
											"                    waitOnTask(--retries);",
											"                }, 10000);",
											"            }",
											"        }); ",
											"    }",
											"}",
											"",
											"var jsonData = pm.response.json();",
											"var taskid = jsonData.result[0].data.task;",
											"",
											"waitOnTask(10);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/dvmdb/adom/{{adom}}/script/execute\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"script\": \"site1-2-interfaces\",\n                \"scope\": [\n                    {\n                        \"name\": \"site1-2\",\n                        \"vdom\": \"root\"\n                    }\n                ]\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.1 - Generate Certificate - Hub",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"session\": \"{{session}}\",\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/securityconsole/sign/certificate/template\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"template\": \"Hub\",\n                \"scope\": [\n                    {\n                        \"name\": \"site1-H1\"\n                    },\n                    {\n                        \"name\": \"site1-H2\"\n                    }\n                ]\n            }\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "5.2 - Generate Certificates - Edge",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": 1,\n    \"session\": \"{{session}}\",\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/securityconsole/sign/certificate/template\",\n            \"data\": {\n                \"adom\": \"{{adom}}\",\n                \"template\": \"Edge\",\n                \"scope\": [\n                    {\n                        \"name\": \"site1-1\"\n                    },\n                    {\n                        \"name\": \"site1-2\"\n                    }\n                ]\n            }\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "6.1 - Assign CLI Template - Hub-Overlay",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"1\",\n    \"session\": \"{{session}}\",\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template/01-Hub-Overlay/scope member\",\n            \"data\": [\n                {\n                    \"name\": \"site1-H1\",\n                    \"vdom\": \"root\"\n                },\n                {\n                    \"name\": \"site1-H2\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "6.2 - Assign CLI Template - Edge-Overlay",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"1\",\n    \"session\": \"{{session}}\",\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template/01-Edge-DualHub-Overlay/scope member\",\n            \"data\": [\n                {\n                    \"name\": \"site1-1\",\n                    \"vdom\": \"root\"\n                },\n                {\n                    \"name\": \"site1-2\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "7 - Install Configuration - Overlays",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"function waitOnTask(retries) {",
											"    if (!retries) {",
											"        pm.test(\"Task completed\", function() {",
											"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
											"        });",
											"        postman.setNextRequest(null);",
											"    }",
											"    else {",
											"        pm.sendRequest({",
											"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
											"            method: 'POST',",
											"            header: \"Content-Type:application/json\",",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
											"            }",
											"        }, function(err, response) {",
											"            var jsonData = response.json();",
											"            if (jsonData.result[0].data.percent == 100) {",
											"                // Task completed",
											"                if (jsonData.result[0].data.num_err) {",
											"                    postman.setNextRequest(null);",
											"                }",
											"                pm.test(\"Task completed\", function() {",
											"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed for some devices\");     ",
											"                });",
											"            }",
											"            else {",
											"                console.log(\"Task is still not complete\");",
											"                setTimeout(function() {",
											"                    waitOnTask(--retries);",
											"                }, 10000);",
											"            }",
											"        }); ",
											"    }",
											"}",
											"",
											"var jsonData = pm.response.json();",
											"var taskid = jsonData.result[0].data.task;",
											"",
											"waitOnTask(10);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/securityconsole/install/device\",\n            \"data\": [\n                {\n                    \"adom\": \"{{adom}}\",\n                    \"scope\": [\n                        {\n                            \"name\": \"site1-H1\",\n                            \"vdom\": \"root\"\n                        },\n                        {\n                            \"name\": \"site1-H2\",\n                            \"vdom\": \"root\"\n                        },\n                        {\n                            \"name\": \"site1-1\",\n                            \"vdom\": \"root\"\n                        },\n                        {\n                            \"name\": \"site1-2\",\n                            \"vdom\": \"root\"\n                        }\n                    ],\n                    \"flags\": \"none\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "8.1 - Assign CLI Template Group - Hub-Template",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"1\",\n    \"session\": \"{{session}}\",\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template-group/Hub-Template/scope member\",\n            \"data\": [\n                {\n                    \"name\": \"site1-H1\",\n                    \"vdom\": \"root\"\n                },\n                 {\n                    \"name\": \"site1-H2\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "8.2 - Assign CLI Template Group - Edge-Template",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"id\": \"1\",\n    \"session\": \"{{session}}\",\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/config/adom/{{adom}}/obj/cli/template-group/Edge-DualHub-Template/scope member\",\n            \"data\": [\n                {\n                    \"name\": \"site1-1\",\n                    \"vdom\": \"root\"\n                },\n                {\n                    \"name\": \"site1-2\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "9.1 - Assign SD-WAN Template - Hub-Template",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/wanprof/adom/{{adom}}/Hub-Template/scope member\",\n            \"data\": [\n                {\n                    \"name\": \"site1-H1\",\n                    \"vdom\": \"root\"\n                },\n                {\n                    \"name\": \"site1-H2\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "9.2 - Assign SD-WAN Template - Edge-Template",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"add\",\n    \"params\": [\n        {\n            \"url\": \"/pm/wanprof/adom/{{adom}}/Edge-DualHub-Template/scope member\",\n            \"data\": [\n                {\n                    \"name\": \"site1-1\",\n                    \"vdom\": \"root\"\n                },\n                {\n                    \"name\": \"site1-2\",\n                    \"vdom\": \"root\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "10.1 - Install Policy - Hubs",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"function waitOnTask(retries) {",
											"    if (!retries) {",
											"        pm.test(\"Task completed\", function() {",
											"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
											"        });",
											"        postman.setNextRequest(null);",
											"    }",
											"    else {",
											"        pm.sendRequest({",
											"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
											"            method: 'POST',",
											"            header: \"Content-Type:application/json\",",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
											"            }",
											"        }, function(err, response) {",
											"            var jsonData = response.json();",
											"            if (jsonData.result[0].data.percent == 100) {",
											"                // Task completed",
											"                if (jsonData.result[0].data.num_err) {",
											"                    postman.setNextRequest(null);",
											"                }",
											"                pm.test(\"Task completed\", function() {",
											"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed for some devices\");     ",
											"                });",
											"            }",
											"            else {",
											"                console.log(\"Task is still not complete\");",
											"                setTimeout(function() {",
											"                    waitOnTask(--retries);",
											"                }, 10000);",
											"            }",
											"        }); ",
											"    }",
											"}",
											"",
											"var jsonData = pm.response.json();",
											"var taskid = jsonData.result[0].data.task;",
											"",
											"waitOnTask(10);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/securityconsole/install/package\",\n            \"data\": [\n                {\n                    \"adom\": \"{{adom}}\",\n                    \"pkg\": \"Hubs\",\n                    \"scope\": [\n                        {\n                            \"name\": \"Hubs\"\n                        }\n                    ],\n                    \"flags\": \"none\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						},
						{
							"name": "10.2 - Install Policy - Edge",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"function waitOnTask(retries) {",
											"    if (!retries) {",
											"        pm.test(\"Task completed\", function() {",
											"            pm.expect(0).to.equal(1, \"Timeout while waiting for task completion\");     ",
											"        });",
											"        postman.setNextRequest(null);",
											"    }",
											"    else {",
											"        pm.sendRequest({",
											"            url: \"https://\" + pm.environment.get(\"ip\") + \"/jsonrpc\",",
											"            method: 'POST',",
											"            header: \"Content-Type:application/json\",",
											"            body: {",
											"                mode: 'raw',",
											"                raw: JSON.stringify({\"session\": pm.environment.get(\"session\"), \"id\": 1, \"method\": \"get\",\"params\": [{\"url\": \"/task/task/\" + taskid}]})",
											"            }",
											"        }, function(err, response) {",
											"            var jsonData = response.json();",
											"            if (jsonData.result[0].data.percent == 100) {",
											"                // Task completed",
											"                if (jsonData.result[0].data.num_err) {",
											"                    postman.setNextRequest(null);",
											"                }",
											"                pm.test(\"Task completed\", function() {",
											"                    pm.expect(jsonData.result[0].data.num_err).to.equal(0, \"Failed for some devices\");     ",
											"                });",
											"            }",
											"            else {",
											"                console.log(\"Task is still not complete\");",
											"                setTimeout(function() {",
											"                    waitOnTask(--retries);",
											"                }, 10000);",
											"            }",
											"        }); ",
											"    }",
											"}",
											"",
											"var jsonData = pm.response.json();",
											"var taskid = jsonData.result[0].data.task;",
											"",
											"waitOnTask(10);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"exec\",\n    \"params\": [\n        {\n            \"url\": \"/securityconsole/install/package\",\n            \"data\": [\n                {\n                    \"adom\": \"{{adom}}\",\n                    \"pkg\": \"Edge\",\n                    \"scope\": [\n                        {\n                            \"name\": \"Edge\"\n                        }\n                    ],\n                    \"flags\": \"none\"\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://{{ip}}/jsonrpc",
									"protocol": "https",
									"host": [
										"{{ip}}"
									],
									"path": [
										"jsonrpc"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "- Breakpoint -",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"postman.setNextRequest(null);",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"session\": \"{{session}}\",\n    \"id\": 1,\n    \"method\": \"get\",\n    \"params\": [\n        {\n            \"url\": \"/sys/status\"\n        }\n    ]\n}"
						},
						"url": {
							"raw": "https://{{ip}}/jsonrpc",
							"protocol": "https",
							"host": [
								"{{ip}}"
							],
							"path": [
								"jsonrpc"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = JSON.parse(responseBody);",
							"",
							"postman.setEnvironmentVariable('session',data['session']);",
							"postman.setEnvironmentVariable('status_code',data['result'][0]['status']['code']);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"session\" : 1,\r\n\t\"id\" : 1,\r\n\t\"method\" : \"exec\",\r\n\t\"params\" : [\r\n\t\t{\r\n\t\t\t\"url\" : \"sys/login/user\",\r\n\t\t\t\"data\" : [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"user\" : \"{{username}}\",\r\n\t\t\t\t\t\"passwd\" : \"{{password}}\"\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t]\r\n}"
				},
				"url": {
					"raw": "https://{{ip}}/jsonrpc",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"path": [
						"jsonrpc"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"",
							"postman.setEnvironmentVariable('session',data['session']);"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"session\" : \"{{session}}\",\r\n  \"id\" : 1,\r\n  \"method\" : \"exec\",\r\n  \"params\" : [\r\n    {\r\n      \"url\" : \"/sys/logout\"\r\n    }\r\n  ]\r\n}"
				},
				"url": {
					"raw": "https://{{ip}}/jsonrpc",
					"protocol": "https",
					"host": [
						"{{ip}}"
					],
					"path": [
						"jsonrpc"
					]
				},
				"description": "Log out a session."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.test(\"HTTP Status code is 200 OK\", function () {",
					"    pm.response.to.have.status(200);",
					"});",
					"",
					"pm.test(\"JSON Status code is 0\", function () {",
					"    var jsonData = pm.response.json();",
					"    if (jsonData.result[0].status.code) {",
					"        postman.setNextRequest(null);",
					"    }    ",
					"    pm.expect(jsonData.result[0].status.code).to.equal(0);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "as",
			"value": "65000"
		},
		{
			"key": "h1-inet-id",
			"value": "11"
		},
		{
			"key": "h1-inet-ip",
			"value": "100.64.1.1"
		},
		{
			"key": "h1-inet-tunnel-ip",
			"value": "10.201.1.1"
		},
		{
			"key": "h1-inet-tunnel-net",
			"value": "10.201.1.0/24"
		},
		{
			"key": "h1-mpls-id",
			"value": "12"
		},
		{
			"key": "h1-mpls-ip",
			"value": "172.16.1.5"
		},
		{
			"key": "h1-mpls-tunnel-ip",
			"value": "10.202.1.1"
		},
		{
			"key": "h1-mpls-tunnel-net",
			"value": "10.202.1.0/24"
		},
		{
			"key": "h2-inet-id",
			"value": "21"
		},
		{
			"key": "h2-inet-ip",
			"value": "100.64.2.1"
		},
		{
			"key": "h2-inet-tunnel-ip",
			"value": "10.201.2.1"
		},
		{
			"key": "h2-inet-tunnel-net",
			"value": "10.201.2.0/24"
		},
		{
			"key": "h2-mpls-id",
			"value": "22"
		},
		{
			"key": "h2-mpls-ip",
			"value": "172.16.2.5"
		},
		{
			"key": "h2-mpls-tunnel-ip",
			"value": "10.202.2.1"
		},
		{
			"key": "h2-mpls-tunnel-net",
			"value": "10.202.2.0/24"
		},
		{
			"key": "inet-intf",
			"value": "port1"
		},
		{
			"key": "mpls-intf",
			"value": "port4"
		},
		{
			"key": "tunnel-mask",
			"value": "255.255.255.0"
		},
		{
			"key": "lan-summary",
			"value": "10.0.0.0/14"
		},
		{
			"key": "site11-lan-net",
			"value": "10.0.1.0/24"
		},
		{
			"key": "site12-lan-net",
			"value": "10.0.2.0/24"
		},
		{
			"key": "h1-lan-net",
			"value": "10.1.0.0/24"
		},
		{
			"key": "h2-lan-net",
			"value": "10.2.0.0/24"
		}
	]
}